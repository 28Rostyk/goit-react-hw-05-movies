{"version":3,"file":"static/js/532.ab512dcc.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieDetails/movieDetails.module.css?f136","components/MovieDetails/MovieDetails.jsx","services/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"blocks_wrapper\":\"movieDetails_blocks_wrapper__mqbKy\",\"button\":\"movieDetails_button__pnWLJ\",\"container\":\"movieDetails_container__DMXsQ\",\"title\":\"movieDetails_title__zhbPy\",\"popularity\":\"movieDetails_popularity__QEaYF\",\"title_overview\":\"movieDetails_title_overview__URY4R\",\"overview_text\":\"movieDetails_overview_text__yFKVt\",\"title_genres\":\"movieDetails_title_genres__-bDxt\",\"genres_text\":\"movieDetails_genres_text__51oiO\",\"genres_container\":\"movieDetails_genres_container__Kk1kn\",\"additional_container\":\"movieDetails_additional_container__+5HaF\",\"additional_container_item\":\"movieDetails_additional_container_item__2dONx\",\"additional_title\":\"movieDetails_additional_title__vu4XR\",\"cast\":\"movieDetails_cast__McVl5\",\"reviews\":\"movieDetails_reviews__Lk2PQ\"};","import {\n  NavLink,\n  Outlet,\n  useParams,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { ColorRing } from 'react-loader-spinner';\nimport { getMovieDetails } from 'services/Api';\nimport css from './movieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const getYear = () => new Date(movie.release_date).getFullYear();\n  let activeClassName = {\n    color: '#2196f3',\n  };\n\n  const handleClick = () => navigate(location?.state?.from ?? '/');\n\n  useEffect(() => {\n    const movieDetails = async () => {\n      try {\n        setLoading(true);\n        const results = await getMovieDetails(movieId);\n        setMovie(results);\n      } catch (error) {\n      } finally {\n        setLoading(false);\n      }\n    };\n    movieDetails();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && (\n        <ColorRing\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{}}\n          wrapperClass={css.blocks_wrapper}\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n      )}\n      {movie && (\n        <>\n          <button className={css.button} onClick={handleClick}>\n            Go back\n          </button>\n          <div className={css.container}>\n            <div>\n              <img\n                src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n                alt={movie.title}\n              />\n            </div>\n            <div>\n              <h3 className={css.title}>\n                {movie.title}({getYear()})\n              </h3>\n              <p className={css.popularity}>User Score: {movie.popularity}</p>\n              <div className=\"movie_overview\">\n                <h3 className={css.title_overview}>Overview</h3>\n                <p className={css.overview_text}>{movie.overview}</p>\n              </div>\n              <div>\n                <h3 className={css.title_genres}>Genres</h3>\n                <div className={css.genres_container}>\n                  {movie.genres.map(({ id, name }) => (\n                    <p className={css.genres_text} key={id}>\n                      {name}\n                    </p>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n      {!loading && (\n        <>\n          <hr />\n          <h2 className={css.additional_title}>Additional Information</h2>\n          <ul className={css.additional_container}>\n            <li className={css.additional_container_item}>\n              <NavLink\n                to={`/movies/${movieId}/cast`}\n                style={({ isActive }) =>\n                  isActive ? activeClassName : undefined\n                }\n                state={location.state}\n              >\n                <p className={css.cast}>Cast</p>\n              </NavLink>\n            </li>\n            <li className={css.additional_container_item}>\n              <NavLink\n                to={`/movies/${movieId}/reviews`}\n                style={({ isActive }) =>\n                  isActive ? activeClassName : undefined\n                }\n                state={location.state}\n              >\n                <p className={css.reviews}>Reviews</p>\n              </NavLink>\n            </li>\n          </ul>\n          <hr />\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'bc1d17da9749fdffed6664a4ab50ba73';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const {\n    data: { results },\n  } = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&language=en-US&include_adult=false`\n  );\n  return results;\n};\n\nexport const getMovieSearch = async query => {\n  const {\n    data: { results },\n  } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&include_adult=false`\n  );\n  return results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const {\n    data: { results },\n  } = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return results;\n};\n\nexport const getMovieCast = async id => {\n  const {\n    data: { cast },\n  } = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return cast;\n};\n"],"names":["useState","movie","setMovie","loading","setLoading","movieId","useParams","location","useLocation","navigate","useNavigate","activeClassName","color","useEffect","movieDetails","getMovieDetails","results","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","css","colors","className","onClick","state","from","src","poster_path","alt","title","Date","release_date","getFullYear","popularity","overview","genres","map","id","name","to","style","isActive","undefined","API_KEY","BASE_URL","getTrendingMovies","axios","data","getMovieSearch","query","getMovieReviews","getMovieCast","cast"],"sourceRoot":""}