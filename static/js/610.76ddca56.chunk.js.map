{"version":3,"file":"static/js/610.76ddca56.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/SearchBar/searchBar.module.css?272a","components/SearchBar/SearchBar.jsx","components/Movie/Movie.jsx","webpack://react-homework-template/./src/components/MovieList/movieList.module.css?ccba","components/MovieList/MovieList.jsx","services/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"searchBar_searchForm__nvYam\",\"container\":\"searchBar_container__bE8li\",\"searchInput\":\"searchBar_searchInput__uOYMk\",\"searchButton\":\"searchBar_searchButton__y6mg9\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport css from './searchBar.module.css';\n\nconst SearchBar = ({ onSearch }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleQuerySearch = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      toast.info('Enter the film title');\n    }\n\n    onSearch(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <>\n      <form className={css.searchForm} onSubmit={handleSubmit}>\n        <div className={css.container}>\n          <label>\n            <input\n              className={css.searchInput}\n              type=\"text\"\n              name=\"searchQuery\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search ...\"\n              onChange={handleQuerySearch}\n            />\n          </label>\n          <button className={css.searchButton} type=\"submit\">\n            <AiOutlineSearch className={css.SearchBtnIcon} />\n          </button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default SearchBar;\n","import { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchBar from 'components/SearchBar';\nimport { ColorRing } from 'react-loader-spinner';\nimport { toast } from 'react-toastify';\n\nimport { getMovieSearch } from 'services/Api';\nimport MovieList from 'components/MovieList';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Movie = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n  const searchRequest = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchRequest) {\n      return;\n    }\n    const movieSearch = async () => {\n      try {\n        setLoading(true);\n        const results = await getMovieSearch(searchRequest);\n\n        setMovies(results);\n      } catch (error) {\n        setError(toast.error('Ooops. Something went wrong...'));\n      } finally {\n        setLoading(false);\n      }\n    };\n    movieSearch();\n  }, [searchRequest, setLoading]);\n\n  function onSubmit(value) {\n    setSearchParams({ query: `${value}` });\n  }\n\n  return (\n    <>\n      <SearchBar onSearch={onSubmit} />\n      {loading && (\n        <ColorRing\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n      )}\n      {error && <p>{error}</p>}\n      {movies.length > 0 && (\n        <MovieList movies={movies} prevLocation={location} />\n      )}\n    </>\n  );\n};\nexport default Movie;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"movieList_list__TWtH3\",\"link\":\"movieList_link__I+0hB\"};","import { Link } from 'react-router-dom';\nimport css from './movieList.module.css';\n\nconst MovieList = ({ movies, prevLocation }) => {\n  return (\n    <>\n      <ul className={css.list}>\n        {movies.map(({ id, original_title }) => (\n          <li className={css.listItem} key={id}>\n            <Link\n              className={css.link}\n              to={`/movies/${id}`}\n              state={{ from: prevLocation }}\n            >\n              <h3 className={css.title}>{original_title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default MovieList;\n","import axios from 'axios';\n\nconst API_KEY = 'bc1d17da9749fdffed6664a4ab50ba73';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const {\n    data: { results },\n  } = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&language=en-US&include_adult=false`\n  );\n  return results;\n};\n\nexport const getMovieSearch = async query => {\n  const {\n    data: { results },\n  } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&include_adult=false`\n  );\n  return results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const {\n    data: { results },\n  } = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return results;\n};\n\nexport const getMovieCast = async id => {\n  const {\n    data: { cast },\n  } = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return cast;\n};\n"],"names":["onSearch","useState","searchQuery","setSearchQuery","className","css","onSubmit","e","preventDefault","trim","toast","type","name","value","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","useSearchParams","searchParams","setSearchParams","movies","setMovies","error","setError","loading","setLoading","location","useLocation","searchRequest","get","useEffect","movieSearch","getMovieSearch","results","query","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","length","MovieList","prevLocation","map","id","original_title","to","state","from","API_KEY","BASE_URL","getTrendingMovies","axios","data","getMovieDetails","movieId","getMovieReviews","getMovieCast","cast"],"sourceRoot":""}